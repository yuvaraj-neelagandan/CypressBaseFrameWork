{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-09T12:27:34.123Z",
    "end": "2025-01-09T12:27:38.513Z",
    "duration": 4390,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1f4f30d5-ac46-4944-8449-f34fca5187e4",
      "title": "",
      "fullFile": "cypress\\e2e\\functional\\login_test.cy.ts",
      "file": "cypress\\e2e\\functional\\login_test.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0194d7c-dffe-40eb-9f2e-9d35b2e653a8",
          "title": "Login Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should log in successfully with valid credentials",
              "fullTitle": "Login Test should log in successfully with valid credentials",
              "timedOut": null,
              "duration": 1934,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load the configuration from the fixture file\ncy.fixture('config.json').then((config) => {\n    // Visit the Sauce Demo login page\n    cy.visit(config.baseUrl);\n    // Get the username and password from the config\n    const userName = config.userName;\n    const password = config.password;\n    // Use utility method to input username\n    (0, pageActions_1.inputText)('input#user-name', userName);\n    // Use utility method to input password\n    (0, pageActions_1.inputText)('input#password', password);\n    // Use utility method to click the login button\n    (0, mouseActions_1.clickElement)('input#login-button');\n    // Assert that we are redirected to the products page after login\n    // const successUrl = config.loginSuccessUrl;  // Get success URL from config\n    // cy.url().should('include', successUrl);  // Dynamic check based on config\n    // Assert that the inventory list is visible\n    // const inventoryListSelector = config.inventoryListSelector;  // Get selector from config\n    // cy.get(inventoryListSelector).should('be.visible');  // Dynamic selector check\n});",
              "err": {},
              "uuid": "d8a11ba3-68d9-4e78-b8e1-33f632917688",
              "parentUUID": "c0194d7c-dffe-40eb-9f2e-9d35b2e653a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8a11ba3-68d9-4e78-b8e1-33f632917688"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/reports"
      },
      "version": "6.2.0"
    }
  }
}